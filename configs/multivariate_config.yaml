# This is a standalone version for simplicity, inheriting the structure of base_config.
# Univariate specific settings are defined.

project: "demand_forecasting"
experiment_name: "univariate_TCN_experiment"

# Data configuration
target_column: "Demand(MW)"
forecasting_type: "multivariate"
features: ['Month', 'Day', 'Hour_of_day', 'Temperature', 'Humidity', 'Heat_Index_C']
sequence_length: 24
forecast_horizon: 1
test_size: 0.2
val_size: 0.2
random_state: 42

# --- NEW: Feature Engineering Control Panel ---
feature_engineering:
  use_time_features: true              # (true/false) Create hour, day, month features?
  use_cyclical_encoding: true          # (true/false) Convert time features to sin/cos?
  use_lag_features: true               # (true/false) Create demand_lag_24hr, etc.?
  use_rolling_window_features: true    # (true/false) Create rolling mean/std?

# Model configuration
model_type: "Transformer"
input_size: 1
hidden_size: 64
num_layers: 2
dropout: 0.2

# Training configuration
batch_size: 32
learning_rate: 0.001
num_epochs: 50
patience: 10

# Checkpointing
checkpoint_freq: 5

# W&B configuration
use_wandb: True
wandb_project: "demand_forecasting_multivariate"
wandb_entity: null

scheduler_config:
  use_scheduler: True   # Set to True to enable the scheduler
  patience: 3           # Reduce LR if val_loss doesn't improve for 3 epochs
  factor: 0.5           # When reducing, new_lr = old_lr * 0.5
